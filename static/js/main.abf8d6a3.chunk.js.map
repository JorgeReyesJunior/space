{"version":3,"sources":["app/reducers/axiosReducer.js","app/reducers/stylesReducer.js","app/reducers/all.js","app/actions/index.js","app/sagas/axiosSaga.js","app/sagas/index.js","app/components/ScrollCard/ScrollCard.js","app/components/ScrollTrack/ScrollTrack.js","app/components/ScrollContainer/ScrollContainer.js","app/components/ScrollViewport/ScrollViewport.js","app/components/App/App.js","serviceWorker.js","index.js"],"names":["initialState","data","isLoading","error","AxiosReducer","state","action","type","payload","transformZValue","StylesReducer","RootReducer","combineReducers","axiosReducer","stylesReducer","ACTION_TYPES","AXIOS_FETCH","AXIOS_FETCH_SUCCESS","AXIOS_FETCH_FAILURE","UPDATE_TRANSFORM_Z_VALUE","ACTION_CREATORS","fetchAxios","fetchAxiosSuccess","fetchAxiosFailure","updateTransformZValue","fetchData","AxiosSaga","url","call","axios","get","response","put","actions","takeLatest","RootSaga","all","axiosSaga","ScrollCard","props","className","cardOrder","ScrollTrack","useState","transformZ","setTransformZ","useSelector","scrollTrackStyles","transform","useEffect","style","map","card","i","key","ScrollContainer","React","forwardRef","ref","ScrollViewport","height","setHeight","scrollContainerRef","useRef","dispatch","useDispatch","scrollViewportStyle","scrollContainer","current","scrollContainerPerspective","window","getComputedStyle","scrollCards","getElementsByClassName","length","computedScrollContainerPerspective","parseInt","perspective","viewportHeight","innerHeight","addEventListener","pageYOffset","App","useEffectAborted","a","href","Boolean","location","hostname","match","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Provider","propTypes","PropTypes","object","isRequired","subscribe","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abf8d6a3.chunk.js","sourcesContent":["const initialState = {\n  data: null,\n  isLoading: false,\n  error: false\n};\n\nconst AxiosReducer = (state = initialState, action) =>  {\n  switch (action.type) {\n    case \"AXIOS_FETCH\":\n      return {\n        ...state, \n        isLoading: true\n      }\n    case \"AXIOS_FETCH_SUCCESS\":\n      return {\n        ...state,\n        data: action.payload,\n        isLoading: false\n      }\n      case \"AXIOS_FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport { initialState }; \nexport default AxiosReducer;","const initialState = {\n  transformZValue: 0,\n};\n\nconst StylesReducer = (state = initialState, action) =>  {\n  switch (action.type) {\n    case \"UPDATE_TRANSFORM_Z_VALUE\":\n      return {\n        ...state, \n        transformZValue: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport { initialState }; \nexport default StylesReducer;","import { combineReducers } from 'redux'\nimport axiosReducer from './axiosReducer';\nimport stylesReducer from './stylesReducer';\n\nconst RootReducer = combineReducers({\n  axiosReducer,\n  stylesReducer\n});\n\nexport default RootReducer;","const ACTION_TYPES = {\n  AXIOS_FETCH: \"AXIOS_FETCH\",\n  AXIOS_FETCH_SUCCESS: \"AXIOS_FETCH_SUCCESS\",\n  AXIOS_FETCH_FAILURE: \"AXIOS_FETCH_FAILURE\",\n  UPDATE_TRANSFORM_Z_VALUE: \"UPDATE_TRANSFORM_Z_VALUE\"\n};\n\nconst ACTION_CREATORS = {\n  fetchAxios: (payload) => {\n    return {\n      type: ACTION_TYPES.AXIOS_FETCH,\n      payload\n    }\n  },\n  fetchAxiosSuccess: (payload) => {\n    return {\n      type: ACTION_TYPES.AXIOS_FETCH_SUCCESS,\n      payload\n    }\n  },\n  fetchAxiosFailure: (payload) => {\n    return {\n      type: ACTION_TYPES.AXIOS_FETCH_FAILURE,\n      payload\n    }\n  },\n  updateTransformZValue: (payload) => {\n    return {\n      type: ACTION_TYPES.UPDATE_TRANSFORM_Z_VALUE,\n      payload\n    }\n  }\n};\n\nexport default { ...ACTION_TYPES, ...ACTION_CREATORS };","import axios from 'axios';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport actions from '../actions';\n\nfunction* fetchData(action) {\n  const url = action.payload;\n\n  try {\n    const response = yield call(\n      axios.get,\n      url\n    );\n    yield put(actions.fetchAxiosSuccess(response.data));\n    \n  } catch(error) {\n    yield put(actions.fetchAxiosFailure(error));\n  }\n}\n\nexport default function* AxiosSaga() {\n  yield takeLatest('AXIOS_FETCH', fetchData);\n};","import { all } from 'redux-saga/effects';\nimport axiosSaga from './axiosSaga';\n// import Api from '...'\n\nexport default function* RootSaga() {\n  yield all([\n    axiosSaga()\n  ])\n};","import React from 'react';\nimport './ScrollCard.css';\n\nconst ScrollCard = (props) => {\n  return (\n    <div className=\"c-scroll-card\">\n      <h2 className=\"c-scroll-card__title\">Card: {props.cardOrder}</h2>\n      <p className=\"c-scroll-card__body\">Content</p>\n    </div>\n  );\n};\n\nexport default ScrollCard;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux' \nimport ScrollCard from '../ScrollCard/ScrollCard';\nimport './ScrollTrack.css';\n\nconst ScrollTrack = () => {\n  const [transformZ, setTransformZ] = useState();\n  const stylesReducer = useSelector(state => state.stylesReducer);\n  const transformZValue = stylesReducer.transformZValue;\n  const allCards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const scrollTrackStyles = {\n    transform: `translateZ(${transformZ}px)`\n  }\n\n  useEffect(() => {\n    setTransformZ(transformZValue);\n  }, [transformZValue])\n  \n  return (\n    <div className=\"o-scroll-track\" style={scrollTrackStyles}>\n      {allCards.map((card, i) => {\n        return <ScrollCard key={`${card}-${i}`} cardOrder={card} />\n      })}\n    </div>\n  );\n};\n\nexport default ScrollTrack;","import React from 'react';\nimport ScrollTrack from '../ScrollTrack/ScrollTrack';\nimport './ScrollContainer.css';\n\nconst ScrollContainer = React.forwardRef((props, ref) => {\n  return (\n    <div className=\"o-scroll-container\" ref={ref} >\n      <ScrollTrack />\n    </div>\n  );\n});\n\nexport default ScrollContainer;","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport actions from '../../actions';\nimport ScrollContainer from '../ScrollContainer/ScrollContainer';\nimport './ScrollViewport.css';\n\nconst ScrollViewport = () => {\n  const [height, setHeight] = useState();\n  const scrollContainerRef = useRef();\n  const dispatch = useDispatch();\n  const scrollViewportStyle = {\n    height: `${height}px`\n  }\n\n\n  useEffect(() => {\n    function updateView() {\n      dispatch({\n        type: `${actions.UPDATE_TRANSFORM_Z_VALUE}`,\n        payload: window.pageYOffset\n      });\n    }\n    \n    const scrollContainer = scrollContainerRef.current;\n    const scrollContainerPerspective = window.getComputedStyle(scrollContainer);\n    const scrollCards = scrollContainer.getElementsByClassName('c-scroll-card').length;\n    const computedScrollContainerPerspective = parseInt(scrollContainerPerspective.perspective);\n    const viewportHeight = (window.innerHeight + computedScrollContainerPerspective) * scrollCards;\n\n    setHeight(viewportHeight);\n\n    window.addEventListener('scroll', updateView);\n  }, [dispatch, scrollContainerRef])\n\n  return (\n    <div className=\"o-scroll-viewport\" style={scrollViewportStyle}>\n      <ScrollContainer ref={scrollContainerRef} />\n    </div>\n  );\n};\n\nexport default ScrollViewport;","import React, { useEffect }  from 'react';\nimport { useDispatch, useSelector } from 'react-redux' \nimport actions from '../../actions';\nimport ScrollViewport from '../ScrollViewport/ScrollViewport';\nimport './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const axiosReducer = useSelector(state => state.axiosReducer);\n  const { data, isLoading, error } = axiosReducer;\n\n  useEffect(() => {\n    let useEffectAborted = false;\n    \n    async function fetchData() {\n      try {\n        // https://swapi.dev/about\n        const url = `https://swapi.dev/api/people/1/`;\n        await dispatch({\n          type: `${actions.AXIOS_FETCH}`,\n          payload: `${url}`\n        });\n      } catch (error) {\n        await dispatch({\n          type: `${actions.AXIOS_FETCH_FAILURE}`\n        });\n      };\n    }\n    \n    if(!useEffectAborted && !data) {\n      fetchData();\n    }\n\n    return (\n      () => {\n        useEffectAborted = true;\n      }\n    )\n  }, [data, dispatch]);\n\n  if (isLoading) {\n    return (\n      <div className=\"o-app\">\n        <div className=\"o-app__header\">\n          <a href=\"https://jorgereyesjunior.github.io/\">jorgereyesjunior.github.io</a>\n          <p>LOADING DATA</p>\n        </div>\n      </div>\n    );\n  } else if (error) {\n    return (\n      <div className=\"o-app\">\n        <div className=\"o-app__header\">\n          <a href=\"https://jorgereyesjunior.github.io/\">jorgereyesjunior.github.io</a>\n          <p>ERROR FETCHING DATA: {`${error}`}</p>\n        </div>\n      </div>\n    );\n  } else if (data) {\n    return (\n      <div className=\"o-app\">\n        <div className=\"o-app__header\">\n          <a href=\"https://jorgereyesjunior.github.io/\">jorgereyesjunior.github.io</a>\n        </div> \n        <ScrollViewport />\n      </div>\n    );\n  }\n\n  return (null);\n};\n  \n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"regenerator-runtime/runtime\";\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport PropTypes from 'prop-types';\nimport RootReducer from './app/reducers/all';\nimport RootSaga from './app/sagas';\nimport App from './app/components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  RootReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(RootSaga);\n\nProvider.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nstore.subscribe(() => {\n  // let newState = store.getState();\n  // console.log(\"New `store` state: \", newState);\n});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('o-app-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}